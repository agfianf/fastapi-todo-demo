stages:
  - test
  - build
  - deploy

variables:
  IMAGE_NAME: fastapi-todo-demo
  DOCKER_USERNAME: syinx
  DOCKER_IMAGE: docker.io/$DOCKER_USERNAME/$IMAGE_NAME
  DOCKER_REGISTRY: docker.io

# Job untuk test
test:
  stage: test
  image: python:3.12
  tags:
    - shared
  script:
    # install uv
    - VERSION="${CI_COMMIT_TAG:-latest}"
    - echo "VERSION=$VERSION"
    - pip install uv
    - uv sync --all-groups --all-extras
    - pwd
    - ls -la
    - make test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
    - when: never

# Job untuk build dan push Docker image
build_and_push:
  stage: build
  image: docker:24.0.5
  tags:
    - shared
  services:
    - docker::24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
      - echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
  script:
    # Install make
    - apk add --no-cache make
    - apk add --no-cache curl
    - apk add --no-cache git
    - docker --version
    - VERSION="${CI_COMMIT_TAG:-latest}"
    - export VERSION=$VERSION
    - echo "VERSION=$VERSION"
    - make build
    - make docker-push
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
    - when: never

# Job untuk deploy ke VM GCP
deploy_to_gcp:
  stage: deploy
  image: alpine:latest
  tags:
    - shared
  before_script:
    - apk add --no-cache openssh-client bash
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_PRIVATE_KEY" ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H "$GCP_VM_IP" >> ~/.ssh/known_hosts
  script:
    - VERSION="${CI_COMMIT_TAG:-latest}"
    - export VERSION=$VERSION
    - echo "VERSION=$VERSION"
    - echo "Deploying to GCP VM $GCP_VM_IP"
    - ssh $GCP_SSH_USER@$GCP_VM_IP << 'EOF'
        echo "Pulling latest Docker image..."
        VERSION="${CI_COMMIT_TAG:-latest}"
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker pull "$DOCKER_IMAGE:$VERSION"
        docker stop "$IMAGE_NAME" || true
        docker rm "$IMAGE_NAME" || true
        docker run -d --name "$IMAGE_NAME" -p 80:"$APP_PORT" "$DOCKER_IMAGE:$VERSION"
      EOF
    - echo "Deployment completed."
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
    - when: never
