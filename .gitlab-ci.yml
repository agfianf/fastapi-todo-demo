stages:
  - test    # Tahap pengujian
  - build   # Tahap pembangunan image Docker
  - deploy  # Tahap deployment

variables:
  IMAGE_NAME: fastapi-todo-demo
  DOCKER_USERNAME: syinx
  DOCKER_IMAGE: docker.io/$DOCKER_USERNAME/$IMAGE_NAME
  DOCKER_REGISTRY: docker.io
  APP_PORT: 8000

# Job untuk test
test:
  stage: test
  image: python:3.12
  tags:
    - shared
  script:
    - VERSION="${CI_COMMIT_TAG:-latest}"  # Menentukan versi, default: latest
    - echo "Version=$VERSION"
    - pip install uv  # Meng-install dependency yang diperlukan
    - uv sync --all-groups --all-extras  # Sinkronisasi dependensi
    - ls -la  # Menampilkan daftar file untuk debugging
    - make test  # Menjalankan unit test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
    - when: never

# Job untuk build dan push Docker image
build_and_push:
  stage: build
  image: docker:24.0.5
  tags:
    - shared
  services:
    - docker::24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
  script:
    - apk add --no-cache make  # Meng-install make jika belum terinstall
    - docker --version  # Mengecek versi docker
    - VERSION="${CI_COMMIT_TAG:-latest}"  # Tentukan versi image
    - export VERSION=$VERSION
    - echo "Version=$VERSION"
    - make build  # Membangun image Docker
    - make docker-push  # Push image ke registry
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
    - when: never

# Job untuk deploy ke VM GCP
deploy_to_gcp:
  stage: deploy
  image: alpine:latest
  tags:
    - shared
  before_script:
    - apk update && apk add openssh-client  # Meng-install SSH client
    - echo "Memulai SSH agent untuk koneksi secure" 
    - eval $(ssh-agent -s)  # Inisiasi SSH agent
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa  # Menyimpan private key untuk autentikasi
    - chmod 600 ~/.ssh/id_rsa
    - echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts  # Menambahkan known hosts agar SSH tahu server tepercaya
    - cat ~/.ssh/known_hosts  # Debug: Tampilkan known hosts
  script:
    - VERSION="${CI_COMMIT_TAG:-latest}"
    - echo "Version=$VERSION"
    - echo "Mulai deployment ke GCP VM dengan IP=$GCP_VM_IP"
    # Penjelasan: SSH (Secure Shell) digunakan untuk membuat koneksi yang terenkripsi ke VM,
    # sehingga perintah deployment bisa berjalan dengan aman.
    - |
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $GCP_SSH_USER@$GCP_VM_IP "
        echo 'Pulling latest Docker image...'
        VERSION='${CI_COMMIT_TAG:-latest}'
        echo '$DOCKER_PASSWORD' | docker login -u '$DOCKER_USERNAME' --password-stdin
        docker pull '$DOCKER_IMAGE:$VERSION'
        docker stop '$IMAGE_NAME' || true
        docker rm '$IMAGE_NAME' || true
        docker run -d --name '$IMAGE_NAME' -p 80:'$APP_PORT' '$DOCKER_IMAGE:$VERSION'
        echo 'Deployment selesai di VM http://$GCP_VM_IP:80'
      "
    - echo "Deployment selesai."
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
    - when: never
